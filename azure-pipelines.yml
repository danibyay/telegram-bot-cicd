# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
- group: TELEGRAM
- group: TF_STORAGE_ACCOUNT
- name: tag
  value: '$(Build.BuildId)'


stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # Build on any branch
    # - task: Docker@2
    #   displayName: Build an image
    #   inputs:
    #     command: build
    #     dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    #     tags: |
    #       $(tag)
    
    # push only on master
    # - task: Docker@2
    #   displayName: Build and push to dockerhub
    #   inputs:
    #     containerRegistry: 'dockerhub'
    #     repository: 'danibish/my_first_bot'
    #     command: 'buildAndPush'
    #     Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    #     tags: |
    #       pipelinetest
    #       $(tag)
    
    - task: TerraformTaskV3@3
      displayName: Terraform init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        backendServiceArm: 'Azure subscription 1(fd4eca56-866a-4d42-8ec3-cc4426d20760)'
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate23904'
        backendAzureRmContainerName: 'tfstatebot'
        backendAzureRmKey: 'my_first_bot.tfstate'
    
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'azure-telegram'
        commandOptions: '-var token=$(danibishbot_token)'
