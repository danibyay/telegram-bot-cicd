# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
- group: TELEGRAM
- group: TF_STORAGE_ACCOUNT


stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      fetchDepth: 0

    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'

    - task: gitversion/execute@0
      inputs:
        useConfigFile: true
        configFilePath: 'GitVersion.yml'
    
    - script: |
        echo SemVer: $(GitVersion.SemVer)
        echo MajorMinorPatch: $(GitVersion.MajorMinorPatch)
      displayName: echo next tag

    
    # push on PRs to main
    - task: Docker@2
      displayName: Build and push to dockerhub
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
      inputs:
        containerRegistry: 'dockerhub'
        repository: 'danibish/my_first_bot'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(GitVersion.MajorMinorPatch)
    
    - task: TerraformTaskV3@3
      displayName: Terraform init
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        backendServiceArm: 'Azure subscription 1(fd4eca56-866a-4d42-8ec3-cc4426d20760)'
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate23904'
        backendAzureRmContainerName: 'tfstatebot'
        backendAzureRmKey: 'my_first_bot.tfstate'
    
    - task: TerraformTaskV3@3
      displayName: Tf validate
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    
    - task: TerraformTaskV3@3
      displayName: tf plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'azure-telegram'
        commandOptions: '-var token=$(danibishbot_token) -var tag=$(GitVersion.MajorMinorPatch)'
